// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using smarthomeAPI.Data;

#nullable disable

namespace smarthomeAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230225221254_Enviroments")]
    partial class Enviroments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("smarthomeAPI.Models.Enviroment", b =>
                {
                    b.Property<int>("EnviromentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnviromentId"));

                    b.Property<string>("EnviromentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentEnviromentID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EnviromentId");

                    b.HasIndex("UserId", "ParentEnviromentID");

                    b.ToTable("Enviroments");
                });

            modelBuilder.Entity("smarthomeAPI.Models.RawData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnviromentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoggedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("accelerometer_x")
                        .HasColumnType("real");

                    b.Property<float>("accelerometer_y")
                        .HasColumnType("real");

                    b.Property<float>("accelerometer_z")
                        .HasColumnType("real");

                    b.Property<float>("compass_x")
                        .HasColumnType("real");

                    b.Property<float>("compass_y")
                        .HasColumnType("real");

                    b.Property<float>("compass_z")
                        .HasColumnType("real");

                    b.Property<float>("gyroscope_x")
                        .HasColumnType("real");

                    b.Property<float>("gyroscope_y")
                        .HasColumnType("real");

                    b.Property<float>("gyroscope_z")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EnviromentID", "LoggedTime");

                    b.ToTable("RawDatas");
                });

            modelBuilder.Entity("smarthomeAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("smarthomeAPI.Models.Enviroment", b =>
                {
                    b.HasOne("smarthomeAPI.Models.User", "User")
                        .WithMany("Enviroments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("smarthomeAPI.Models.RawData", b =>
                {
                    b.HasOne("smarthomeAPI.Models.Enviroment", "Enviroment")
                        .WithMany("RawDatas")
                        .HasForeignKey("EnviromentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enviroment");
                });

            modelBuilder.Entity("smarthomeAPI.Models.Enviroment", b =>
                {
                    b.Navigation("RawDatas");
                });

            modelBuilder.Entity("smarthomeAPI.Models.User", b =>
                {
                    b.Navigation("Enviroments");
                });
#pragma warning restore 612, 618
        }
    }
}
